{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAC/BC,iBAAiB,UAKtB,SAA4BC,GAC1BA,EAAEC,iBAOF,IALA,IAAIC,EAAQC,EAAaC,cACnBC,EAAiBC,EAAYF,cAC7BG,EAAYC,EAAOJ,cAGhBK,EAAI,EAAGA,GAAKF,EAAWE,IAC9BC,EAAcD,EAAGP,GAAOS,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACxCnB,EAAAoB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE5DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBnB,EAAAoB,OAAOI,QAAQ,sBAAuCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAGhEZ,GAASG,C,IAnBb,IAAMF,EAAeN,SAASC,cAAc,kBACtCQ,EAAcT,SAASC,cAAc,iBACrCU,EAASX,SAASC,cAAc,mBAwBtC,SAASY,EAAcG,EAAUC,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAER,WAAUC,UAEpBQ,EAAO,CAAET,WAAUC,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', submitFormPromises);\n\nconst firstDelayMs = document.querySelector('[name=\"delay\"]');\nconst delayStepMs = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nfunction submitFormPromises(e) {\n  e.preventDefault();\n\n  let delay = firstDelayMs.valueAsNumber;\n  const delayStepMsVal = delayStepMs.valueAsNumber;\n  const amountVal = amount.valueAsNumber;\n  \n\n  for (let i = 1; i <= amountVal; i++) {\n    createPromise(i, delay).then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    \n    delay += delayStepMsVal;\n  }\n}\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","e","preventDefault","delay1","$ce04d3a99e08e73b$var$firstDelayMs","valueAsNumber","delayStepMsVal","$ce04d3a99e08e73b$var$delayStepMs","amountVal","$ce04d3a99e08e73b$var$amount","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","delay","Notify","success","concat","catch","failure","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.b295ede1.js.map"}